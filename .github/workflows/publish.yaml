# reusable workflow for publishing all charms in this repo
name: Manually publish charms

on:
  workflow_call:
    # TODO: Add inputs here too
    #       These would be non-required, with defaults left blank 
    #       and computed below in some cases
    secrets:
      charmcraft-credentials:
        required: true
  workflow_dispatch:
    inputs:
      # TODO: Implement this
      # source_github_branch:
      #   description: Source branch to publish
      #   required: false
      #   default: 'main'
      destination_channel:
        description: CharmHub channel to publish to
        required: false
        default: 'latest/edge'

jobs:
  get-charm-paths:
    name: Generate the Charm Matrix
    runs-on: ubuntu-latest
    outputs:
      charm_paths_list: ${{ steps.get-charm-paths.outputs.CHARM_PATHS_LIST }}
    steps:
      - uses: actions/checkout@v2
      - name: Get paths for all charms in repo
        id: get-charm-paths
        run: bash .github/workflows/get-charm-paths.sh


  publish-charm:
    name: Publish Charm
    runs-on: ubuntu-latest
    needs: get-charm-paths
    strategy:
      fail-fast: false
      matrix: 
        charm-path: ${{ fromJson(needs.get-charm-paths.outputs.charm_paths_list) }}

    steps:
      - name: Print inputs.destination_channel
        run: echo "destination_channel = ${{ inputs.destination_channel }}"

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Select charmhub channel
        uses: canonical/charming-actions/channel@2.1.1
        id: select-channel
        if: ${{ inputs.destination_channel == '' }}

      # Combine inputs from different sources to a single canonical value so later steps don't
      # need logic for picking the right one
      - name: Parse and combine inputs
        id: parse-inputs
        run: |
          # destination_channel
          destination_channel="${{ inputs.destination_channel || steps.select-channel.outputs.name }}"
          echo "setting output of destination_channel=$destination_channel"
          echo "::set-output name=destination_channel::$destination_channel"
          
          # charmcraft_credentials
          # Make charmcraft_credentials a masked value (eg: prevent it from printing in logs)
          # This should be redundant since it should come as a secret, but just in case..id
          credentials=${{ secrets.charmcraft-credentials || secrets.CHARMCRAFT_CREDENTIALS }}
          echo "::add-mask::$credentials"
          echo "setting output of charmcraft_credentials=(not shown)"
          echo "::set-output name=charmcraft_credentials::$credentials"

          # tag_prefix
          # if charm_path = ./ --> tag_prefix = '' (null)
          # if charm_path != ./some-charm (eg: a charm in a ./charms dir) --> tag_prefix = 'some-charm'
          if [ ${{ matrix.charm-path }} == './' ]; then
            tag_prefix=''
          else
            tag_prefix=$(basename ${{ matrix.charm-path }} )
          fi
          echo "setting output of tag_prefix=$tag_prefix"
          echo "::set-output name=tag_prefix::$tag_prefix"

      - name: Upload charm to charmhub
        uses: canonical/charming-actions/upload-charm@2.1.1
        with:
          credentials: ${{ steps.parse-inputs.outputs.charmcraft_credentials }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          charm-path: ${{ matrix.charm-path }}
          channel: ${{ steps.parse-inputs.outputs.destination_channel }}
          tag-prefix: ${{ steps.parse-inputs.outputs.tag_prefix }}
